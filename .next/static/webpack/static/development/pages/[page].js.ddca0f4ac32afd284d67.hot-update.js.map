{"version":3,"file":"static/webpack/static/development/pages/[page].js.ddca0f4ac32afd284d67.hot-update.js","sources":["webpack:///./components/modules/Collage/Collage.jsx","webpack:///./components/modules/HeadlineModule/index.jsx","webpack:///./fetchUrl.js","webpack:///./pages/[page].js"],"sourcesContent":["import styles from './Collage.scss';\n\nconst Collage = ({\n  title,\n  project,\n  project2,\n  project3,\n  project4,\n  project5,\n  singleColor\n}) => {\n  return (\n    <div className={styles.wrapper}>\n      <h1 className={styles.title}>{title}</h1>\n      <h2 className={styles.project} style={singleColor}>\n        {project}\n      </h2>\n      <h2 className={styles.project2}>{project2}</h2>\n      <h2 className={styles.project3}>{project3}</h2>\n      <h2 className={styles.project4} style={singleColor}>\n        {project4}\n      </h2>\n      <h2 className={styles.project5}>{project5}</h2>\n    </div>\n  );\n};\n\nexport default Collage;\n","import styles from './index.scss';\n\nconst HeadlineModule = ({\n  title,\n  subtitle,\n  button,\n  backgroundColor,\n  color,\n  changeColor,\n  changeBackgroundColor,\n  changeSingleColor\n}) => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.box} style={backgroundColor}></div>\n      <h1 className={styles.title} style={color}>\n        {title}\n      </h1>\n      <h2 className={styles.subtitle} style={color}>\n        {subtitle}\n      </h2>\n      <button\n        className={styles.button}\n        style={backgroundColor}\n        onClick={() => {\n          changeColor();\n          changeBackgroundColor();\n          changeSingleColor();\n        }}\n      >\n        {button}\n      </button>\n    </div>\n  );\n};\n\nexport default HeadlineModule;\n","import fetch from 'isomorphic-unfetch';\n\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default fetchUrl;\n","/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* layout */\nimport DefaultLayout from '../components/layouts/DefaultLayout';\n\n/* components */\nimport HeadlineModule from '../components/modules/HeadlineModule';\nimport Collage from '../components/modules/Collage/Collage.jsx';\nimport fetchUrl from '../fetchUrl';\n\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\n\nconst SlugPage = ({data}) => {\n  const {content} = data;\n  const headlineModuleData = content.body.find(\n    item => item.component === 'Headline'\n  );\n  const collageData = content.body.find(item => item.component === 'Collage');\n  /* Now you need to map your own components, I just left the headline module as reference */\n  return (\n    <DefaultLayout>\n      {headlineModuleData ? (\n        <HeadlineModule\n          title={headlineModuleData.title}\n          subtitle={headlineModuleData.subtitle}\n          button={headlineModuleData.button}\n        />\n      ) : null}\n      {collageData ? (\n        <Collage\n          title={collageData.title}\n          project={collageData.project}\n          project2={collageData.project2}\n          project3={collageData.project3}\n          project4={collageData.project4}\n          project5={collageData.project5}\n        />\n      ) : null}\n    </DefaultLayout>\n  );\n};\n\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\nSlugPage.getInitialProps = async ({query}) => {\n  /* {query} is an object we receive within this method from Next,\n\tso that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const {page} = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n\tserver-side (we are on client-side here) */\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n  return {data}; /* This is the same as { data: data } */\n};\n\nexport default SlugPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;;;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;;;AAGA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAEA;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;AAEA;AACA;;;AAJA;AAAA;AACA;AADA;AAMA;AANA;AAQA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;;;;A","sourceRoot":""}