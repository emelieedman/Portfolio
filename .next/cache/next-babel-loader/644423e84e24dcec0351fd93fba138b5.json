{"ast":null,"code":"var _jsxFileName = \"/Users/emelie/Desktop/hyper-island-projects/react-storyblok-next-boilerplate/pages/[page].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\n/* layout */\n\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n/* components */\n\nimport HeadlineModule from \"../components/modules/HeadlineModule\";\nimport Collage from \"../components/modules/Collage/Collage.jsx\";\nimport ToggleButton from \"../components/modules/ToggleButton/ToggleButton\";\n/* Helper function to fetch data - do we need this as an extra function? Debatable. ðŸ˜Š */\n\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\n\n\nconst SlugPage = ({\n  data\n}) => {\n  const {\n    content\n  } = data;\n  const headlineModuleData = content.body.find(item => item.component === \"Headline\");\n  const collageData = content.body.find(item => item.component === \"Collage\");\n  const toggleButtonData = content.body.find(item => item.component === \"ToggleButton\");\n  /* Now you need to map your own components, I just left the headline module as reference */\n\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, headlineModuleData ? __jsx(HeadlineModule, {\n    title: headlineModuleData.title,\n    subtitle: headlineModuleData.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }) : null, toggleButtonData ? __jsx(\"toggleButton\", {\n    title: toggleButtonData.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : null, collageData ? __jsx(Collage, {\n    title: collageData.title,\n    image1: collageData.image1,\n    image2: collageData.image2,\n    image3: collageData.image3,\n    image4: collageData.image4,\n    image5: collageData.image5,\n    image6: collageData.image6,\n    image7: collageData.image7,\n    image8: collageData.image8,\n    image9: collageData.image9,\n    image10: collageData.image10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : null);\n};\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\n\n\nSlugPage.getInitialProps = async ({\n  query\n}) => {\n  /* {query} is an object we receive within this method from Next,\n  so that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const {\n    page\n  } = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n  server-side (we are on client-side here) */\n\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n\n  return {\n    data\n  };\n  /* This is the same as { data: data } */\n};\n\nexport default SlugPage;","map":{"version":3,"sources":["/Users/emelie/Desktop/hyper-island-projects/react-storyblok-next-boilerplate/pages/[page].js"],"names":["fetch","DefaultLayout","HeadlineModule","Collage","ToggleButton","fetchUrl","url","then","r","json","SlugPage","data","content","headlineModuleData","body","find","item","component","collageData","toggleButtonData","title","subtitle","image1","image2","image3","image4","image5","image6","image7","image8","image9","image10","getInitialProps","query","page"],"mappings":";;;;AAAA;;AAEA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA;;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AAEA;;AACA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAON,KAAK,CAACM,GAAD,CAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;AAED;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,IAApB;AACA,QAAME,kBAAkB,GAAGD,OAAO,CAACE,IAAR,CAAaC,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,UAA/C,CAA3B;AACA,QAAMC,WAAW,GAAGN,OAAO,CAACE,IAAR,CAAaC,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,SAA/C,CAApB;AACA,QAAME,gBAAgB,GAAGP,OAAO,CAACE,IAAR,CAAaC,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,cAA/C,CAAzB;AACA;;AACA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,kBAAkB,GAAG,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA,kBAAkB,CAACO,KAA1C;AAAiD,IAAA,QAAQ,EAAEP,kBAAkB,CAACQ,QAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgG,IADrH,EAEGF,gBAAgB,GAAG;AAAc,IAAA,KAAK,EAAEA,gBAAgB,CAACC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAqD,IAFxE,EAGGF,WAAW,GAAG,MAAC,OAAD;AAAS,IAAA,KAAK,EAAEA,WAAW,CAACE,KAA5B;AAAmC,IAAA,MAAM,EAAEF,WAAW,CAACI,MAAvD;AAA+D,IAAA,MAAM,EAAEJ,WAAW,CAACK,MAAnF;AAA2F,IAAA,MAAM,EAAEL,WAAW,CAACM,MAA/G;AAAuH,IAAA,MAAM,EAAEN,WAAW,CAACO,MAA3I;AAAmJ,IAAA,MAAM,EAAEP,WAAW,CAACQ,MAAvK;AAA+K,IAAA,MAAM,EAAER,WAAW,CAACS,MAAnM;AAA2M,IAAA,MAAM,EAAET,WAAW,CAACU,MAA/N;AAAuO,IAAA,MAAM,EAAEV,WAAW,CAACW,MAA3P;AAAmQ,IAAA,MAAM,EAAEX,WAAW,CAACY,MAAvR;AAA+R,IAAA,OAAO,EAAEZ,WAAW,CAACa,OAApT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAqU,IAHnV,CADF;AAOD,CAbD;AAeA;;;;AAEArB,QAAQ,CAACsB,eAAT,GAA2B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC9C;;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA;;;AAEA,QAAMtB,IAAI,GAAG,MAAMN,QAAQ,CAAE,kCAAiC6B,IAAK,EAAxC,CAA3B;AACA;;AACA,SAAO;AAAEvB,IAAAA;AAAF,GAAP;AAAiB;AAClB,CATD;;AAWA,eAAeD,QAAf","sourcesContent":["/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\n\n/* layout */\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n\n/* components */\nimport HeadlineModule from \"../components/modules/HeadlineModule\";\nimport Collage from \"../components/modules/Collage/Collage.jsx\";\nimport ToggleButton from \"../components/modules/ToggleButton/ToggleButton\"\n\n/* Helper function to fetch data - do we need this as an extra function? Debatable. ðŸ˜Š */\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\nconst SlugPage = ({ data }) => {\n  const { content } = data;\n  const headlineModuleData = content.body.find((item) => item.component === \"Headline\");\n  const collageData = content.body.find((item) => item.component === \"Collage\");\n  const toggleButtonData = content.body.find((item) => item.component === \"ToggleButton\");\n  /* Now you need to map your own components, I just left the headline module as reference */\n  return (\n    <DefaultLayout>\n      {headlineModuleData ? <HeadlineModule title={headlineModuleData.title} subtitle={headlineModuleData.subtitle} /> : null}\n      {toggleButtonData ? <toggleButton title={toggleButtonData.title} /> : null }\n      {collageData ? <Collage title={collageData.title} image1={collageData.image1} image2={collageData.image2} image3={collageData.image3} image4={collageData.image4} image5={collageData.image5} image6={collageData.image6} image7={collageData.image7} image8={collageData.image8} image9={collageData.image9} image10={collageData.image10} /> : null }\n    </DefaultLayout>\n  );\n};\n\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\nSlugPage.getInitialProps = async ({ query }) => {\n  /* {query} is an object we receive within this method from Next,\n\tso that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const { page } = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n\tserver-side (we are on client-side here) */\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n  return { data }; /* This is the same as { data: data } */\n};\n\nexport default SlugPage;\n"]},"metadata":{},"sourceType":"module"}