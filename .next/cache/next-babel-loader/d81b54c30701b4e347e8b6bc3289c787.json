{"ast":null,"code":"var _jsxFileName = \"/Users/emelie/Desktop/hyper-island-projects/react-storyblok-next-boilerplate/pages/[page].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from 'isomorphic-unfetch';\n/* layout */\n\nimport DefaultLayout from '../components/layouts/DefaultLayout';\n/* components */\n\nimport HeadlineModule from '../components/modules/HeadlineModule';\nimport Collage from '../components/modules/Collage/Collage.jsx';\n/* Helper function to fetch data - do we need this as an extra function? Debatable. ðŸ˜Š */\n\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\n\n\nconst SlugPage = ({\n  data\n}) => {\n  // const {content} = data;\n  // const headlineModuleData = content.body.find(\n  //   item => item.component === 'Headline'\n  // );\n  // const collageData = content.body.find(item => item.component === 'Collage');\n\n  /* Now you need to map your own components, I just left the headline module as reference */\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  });\n};\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\n\n\nSlugPage.getInitialProps = async ({\n  query\n}) => {\n  /* {query} is an object we receive within this method from Next,\n  so that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const {\n    page\n  } = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n  server-side (we are on client-side here) */\n\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n\n  return {\n    data\n  };\n  /* This is the same as { data: data } */\n};\n\nexport default SlugPage;","map":{"version":3,"sources":["/Users/emelie/Desktop/hyper-island-projects/react-storyblok-next-boilerplate/pages/[page].js"],"names":["fetch","DefaultLayout","HeadlineModule","Collage","fetchUrl","url","then","r","json","SlugPage","data","getInitialProps","query","page"],"mappings":";;;;AAAA;;AAEA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA;;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,OAAP,MAAoB,2CAApB;AAEA;;AACA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOL,KAAK,CAACK,GAAD,CAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;AAED;;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC3B;AACA;AACA;AACA;AACA;;AACA;AACA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAqBD,CA5BD;AA8BA;;;;AAEAD,QAAQ,CAACE,eAAT,GAA2B,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAmB;AAC5C;;AAEA,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AACA;;;AAEA,QAAMF,IAAI,GAAG,MAAMN,QAAQ,CAAE,kCAAiCS,IAAK,EAAxC,CAA3B;AACA;;AACA,SAAO;AAACH,IAAAA;AAAD,GAAP;AAAe;AAChB,CATD;;AAWA,eAAeD,QAAf","sourcesContent":["/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from 'isomorphic-unfetch';\n\n/* layout */\nimport DefaultLayout from '../components/layouts/DefaultLayout';\n\n/* components */\nimport HeadlineModule from '../components/modules/HeadlineModule';\nimport Collage from '../components/modules/Collage/Collage.jsx';\n\n/* Helper function to fetch data - do we need this as an extra function? Debatable. ðŸ˜Š */\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\n\nconst SlugPage = ({data}) => {\n  // const {content} = data;\n  // const headlineModuleData = content.body.find(\n  //   item => item.component === 'Headline'\n  // );\n  // const collageData = content.body.find(item => item.component === 'Collage');\n  /* Now you need to map your own components, I just left the headline module as reference */\n  return (\n    <DefaultLayout>\n      {/* {headlineModuleData ? (\n        <HeadlineModule\n          title={headlineModuleData.title}\n          subtitle={headlineModuleData.subtitle}\n          button={headlineModuleData.button}\n        />\n      ) : null}\n      {collageData ? (\n        <Collage\n          title={collageData.title}\n          project={collageData.project}\n          project2={collageData.project2}\n          project3={collageData.project3}\n          project4={collageData.project4}\n          project5={collageData.project5}\n        />\n      ) : null} */}\n    </DefaultLayout>\n  );\n};\n\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\nSlugPage.getInitialProps = async ({query}) => {\n  /* {query} is an object we receive within this method from Next,\n\tso that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const {page} = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n\tserver-side (we are on client-side here) */\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n  return {data}; /* This is the same as { data: data } */\n};\n\nexport default SlugPage;\n"]},"metadata":{},"sourceType":"module"}