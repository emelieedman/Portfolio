{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/emelie/Desktop/hyper-island-projects/react-storyblok-next-boilerplate/pages/[page].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* layout */\nimport DefaultLayout from '../components/layouts/DefaultLayout';\n/* components */\n\nimport HeadlineModule from '../components/modules/HeadlineModule';\nimport Collage from '../components/modules/Collage/Collage.jsx';\nimport fetchUrl from '../fetchUrl';\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\n\nvar SlugPage = function SlugPage(_ref) {\n  var data = _ref.data;\n  var content = data.content;\n  var headlineModuleData = content.body.find(function (item) {\n    return item.component === 'Headline';\n  });\n  var collageData = content.body.find(function (item) {\n    return item.component === 'Collage';\n  });\n  /* Now you need to map your own components, I just left the headline module as reference */\n\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n};\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\n\n\nSlugPage.getInitialProps = function _callee(_ref2) {\n  var query, page, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n\n          /* {query} is an object we receive within this method from Next,\n          so that we can retrieve the slug (e.g. '/welcome') coming with the route */\n          page = query.page;\n          /* Calling our internal api endpoint so that we can fetch Storyblok content\n          server-side (we are on client-side here) */\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetchUrl(\"http://localhost:3000/api/page/\".concat(page)));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default SlugPage;","map":{"version":3,"sources":["/Users/emelie/Desktop/hyper-island-projects/react-storyblok-next-boilerplate/pages/[page].js"],"names":["DefaultLayout","HeadlineModule","Collage","fetchUrl","SlugPage","data","content","headlineModuleData","body","find","item","component","collageData","getInitialProps","query","page"],"mappings":";;;;;AAAA;;AAEA;AACA,OAAOA,aAAP,MAA0B,qCAA1B;AAEA;;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA;;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAAA,MACpBC,OADoB,GACTD,IADS,CACpBC,OADoB;AAE3B,MAAMC,kBAAkB,GAAGD,OAAO,CAACE,IAAR,CAAaC,IAAb,CACzB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,SAAL,KAAmB,UAAvB;AAAA,GADqB,CAA3B;AAGA,MAAMC,WAAW,GAAGN,OAAO,CAACE,IAAR,CAAaC,IAAb,CAAkB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,SAAL,KAAmB,SAAvB;AAAA,GAAtB,CAApB;AACA;;AACA,SAAO,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CARD;AAUA;;;;AAEAP,QAAQ,CAACS,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,UAAAA,KAAR,SAAQA,KAAR;;AACzB;;AAEOC,UAAAA,IAHkB,GAGVD,KAHU,CAGlBC,IAHkB;AAIzB;;;AAJyB;AAAA,2CAMNZ,QAAQ,0CAAmCY,IAAnC,EANF;;AAAA;AAMnBV,UAAAA,IANmB;AAAA,2CAQlB;AAACA,YAAAA,IAAI,EAAJA;AAAD,WARkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAWA,eAAeD,QAAf","sourcesContent":["/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* layout */\nimport DefaultLayout from '../components/layouts/DefaultLayout';\n\n/* components */\nimport HeadlineModule from '../components/modules/HeadlineModule';\nimport Collage from '../components/modules/Collage/Collage.jsx';\nimport fetchUrl from '../fetchUrl';\n\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\n\nconst SlugPage = ({data}) => {\n  const {content} = data;\n  const headlineModuleData = content.body.find(\n    item => item.component === 'Headline'\n  );\n  const collageData = content.body.find(item => item.component === 'Collage');\n  /* Now you need to map your own components, I just left the headline module as reference */\n  return <DefaultLayout></DefaultLayout>;\n};\n\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\nSlugPage.getInitialProps = async ({query}) => {\n  /* {query} is an object we receive within this method from Next,\n\tso that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const {page} = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n\tserver-side (we are on client-side here) */\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n  return {data}; /* This is the same as { data: data } */\n};\n\nexport default SlugPage;\n"]},"metadata":{},"sourceType":"module"}